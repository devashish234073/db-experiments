AWSTemplateFormatVersion: '2010-09-09'
Description: Create 2 EC2 instances (t3.small) for MongoDB vs Cassandra timeseries experiment

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: True

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: True

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  SubnetAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MyPublicSubnet
      RouteTableId: !Ref MyRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and Node.js apps
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0

  MongoDbInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.small
      ImageId: ami-03f4878755434977f # Ubuntu 22.04 LTS in your region
      SubnetId: !Ref MyPublicSubnet
      SecurityGroupIds:
        - !Ref MySecurityGroup
      Tags:
        - Key: Name
          Value: MongoDbInstance
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -eux
          export DEBIAN_FRONTEND=noninteractive
          export NEEDRESTART_MODE=a
          # Import MongoDB public GPG key
          curl -fsSL https://www.mongodb.org/static/pgp/server-6.0.asc   | sudo gpg --dearmor -o /usr/share/keyrings/mongodb-server-6.0.gpg

          # Create list file for MongoDB
          echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu   jammy/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list

          # Update package list
          apt-get update

          # Install MongoDB, Git, Node.js, npm
          apt-get install -y git mongodb-org
          # Remove old nodejs (optional, but clean)
          sudo apt remove -y nodejs npm

          # Install Node.js 20 (LTS)
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs

          # Verify
          node --version  # Should show v20.x.x
          npm --versions

          # Start and enable MongoDB service
          systemctl enable --now mongod

          # Clone repo as ubuntu user
          sudo -u ubuntu -H git clone https://github.com/devashish234073/db-experiments.git   /home/ubuntu/db-experiments

          cd /home/ubuntu/db-experiments/timeseries-mongodb-vs-cassandra
          sudo -u ubuntu -H npm install
          sudo -u ubuntu openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout /home/ubuntu/key.pem \
            -out /home/ubuntu/cert.pem \
            -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost"

          # Set permissions
          sudo chown ubuntu:ubuntu /home/ubuntu/key.pem /home/ubuntu/cert.pem
          sudo chmod 600 /home/ubuntu/key.pem /home/ubuntu/cert.pem

          # Run Mongo server on port 3000
          nohup sudo -u ubuntu -H node server-mongo.js > /home/ubuntu/mongo-app.log 2>&1 &

  CassandraInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.medium
      ImageId: ami-03f4878755434977f # Ubuntu 22.04 LTS in your region
      SubnetId: !Ref MyPublicSubnet
      SecurityGroupIds:
        - !Ref MySecurityGroup
      Tags:
        - Key: Name
          Value: CassandraInstance
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -eux
          apt-get update
          apt-get install -y openjdk-11-jdk curl git
          # Remove old nodejs (optional, but clean)
          sudo apt remove -y nodejs npm

          # Install Node.js 20 (LTS)
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs

          # Verify
          node --version  # Should show v20.x.x
          npm --version

          # Install Cassandra
          echo "deb https://debian.cassandra.apache.org 41x main" | tee /etc/apt/sources.list.d/cassandra.list
          curl https://downloads.apache.org/cassandra/KEYS | apt-key add -
          apt-get update
          apt-get install -y cassandra
          systemctl enable --now cassandra

          # Clone repo as ubuntu user
          sudo -u ubuntu -H git clone https://github.com/devashish234073/db-experiments.git /home/ubuntu/db-experiments

          cd /home/ubuntu/db-experiments/timeseries-mongodb-vs-cassandra
          sudo -u ubuntu -H npm install
          sudo -u ubuntu openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout /home/ubuntu/key.pem \
            -out /home/ubuntu/cert.pem \
            -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost"

          # Set permissions
          sudo chown ubuntu:ubuntu /home/ubuntu/key.pem /home/ubuntu/cert.pem
          sudo chmod 600 /home/ubuntu/key.pem /home/ubuntu/cert.pem

          # Run Cassandra server on port 4000
          nohup sudo -u ubuntu -H node server-cassandra.js > /home/ubuntu/cassandra-app.log 2>&1 &

Outputs:
  MongoDBInstancePublicIP:
    Description: Public IP of MongoDB Node.js App
    Value: !GetAtt MongoDbInstance.PublicIp

  CassandraInstancePublicIP:
    Description: Public IP of Cassandra Node.js App
    Value: !GetAtt CassandraInstance.PublicIp
